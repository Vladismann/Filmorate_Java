CREATE TABLE IF NOT EXISTS users (
        user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        login varchar(30) NOT NULL,
        name varchar(100),
        email varchar(254) NOT NULL,
        birth_date date
);

CREATE TABLE IF NOT EXISTS user_friends (
        user_id INTEGER NOT NULL REFERENCES users(user_id),
        friend_id INTEGER NOT NULL REFERENCES users(user_id),
        --подтверждение дружбы по умолчанию пока 1, так как пока нет запросов на подтверждение
        confirmed BOOLEAN NOT NULL DEFAULT 1,
        created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS rating_mpa (
        rating_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        rating_name varchar(100) NOT NULL,
        description varchar(100)
);

CREATE TABLE IF NOT EXISTS films (
        film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        name varchar(100) NOT NULL,
        description varchar(200),
        release_date date,
        duration INTEGER,
        rating_id INTEGER REFERENCES rating_mpa(rating_id)
);

CREATE TABLE IF NOT EXISTS genres (
        genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        genre_name varchar(30)
);

CREATE TABLE IF NOT EXISTS film_genres (
        film_id INTEGER NOT NULL REFERENCES films(film_id),
        genre_id INTEGER NOT NULL REFERENCES genres(genre_id)
);

CREATE TABLE IF NOT EXISTS film_likes (
        film_id INTEGER NOT NULL REFERENCES films(film_id),
        user_id INTEGER NOT NULL REFERENCES users(user_id),
        created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
